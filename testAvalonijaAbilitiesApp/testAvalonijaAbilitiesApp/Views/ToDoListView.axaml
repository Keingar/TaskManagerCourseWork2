<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:ToDoList.ViewModels"
			 xmlns:local="clr-namespace:MyPersonalConverterNamespace"
             mc:Ignorable="d" d:DesignWidth="700" d:DesignHeight="450"
             x:Class="ToDoList.Views.ToDoListView"
			 x:DataType="vm:ToDoListViewModel">
	<UserControl.Resources>
		<local:TaskParametersConverter x:Key="TaskParametersConverter"/>
	</UserControl.Resources>
	<UserControl.Styles>
		<Style Selector="FlyoutPresenter.mySpecialClass">
			<Setter Property="Background" Value="#434343" />
		</Style>

		<Style Selector="TextBlock.TextInFlayers">
			<Setter Property="Foreground" Value="White" />
			<Setter Property="VerticalAlignment" Value="Center" />
		</Style>

		<Style Selector="FlyoutPresenter.CreateTaskClass">
			<Setter Property="Background" Value="#434343" />
		</Style>

		<Style Selector="Button.TitleButton:pointerover /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Foreground" Value="White" />
		</Style>

		<Style Selector="TextBox:focus"> <!--I hate avalonia styles because you literally need to check their github to understand what template to use and even if you find some of them use dynamic resources which you can't change normally, I'm gonna cry-->
			<Setter Property="Background" Value="Black" />
		</Style>

		<Style Selector="ToggleSwitch">
			<Setter Property="OffContent" Value=" " />
			<Setter Property="OnContent" Value=" " />
		</Style>
	</UserControl.Styles>

	<DockPanel >		
		<StackPanel DockPanel.Dock="Top" Height="30" Margin="0, 0, 140, 0" HorizontalAlignment="Right">

			<Button Grid.Column="1"
					Width="160"
					Height="40"
					Margin="0, 0, 0, 0"
					Background="#282828"
					Classes="TitleButton"
					HorizontalContentAlignment="Center"
					VerticalContentAlignment="Top"
					VerticalAlignment="Stretch"
					HorizontalAlignment="Stretch"
					FontWeight="Bold"
					Foreground="White"
					FontSize="16">
				Open Profile
				<Button.Flyout >
					<Flyout  Placement="BottomEdgeAlignedRight" FlyoutPresenterClasses="CreateTaskClass">

						<StackPanel Width="200">
							<Grid RowDefinitions="*, Auto, Auto" >


								<Rectangle  Grid.Row="1" Height="1" Fill="Gray"></Rectangle>

								<Button
									Width="200"
									Height=""
									Margin="0"
									Grid.Row="2"
									CornerRadius="0"
									HorizontalContentAlignment="Left"
									VerticalContentAlignment="Center"
									VerticalAlignment="Stretch"
									HorizontalAlignment="Stretch"
									Foreground="White"
									Background="#434343"
									x:CompileBindings="False"
									Command="{Binding $parent[Window].DataContext.ChangeWindowToLogin}"
									FontSize="12">
									Sign Out
								</Button>

							</Grid>
						</StackPanel>

					</Flyout>
				</Button.Flyout>
			</Button>
			
		</StackPanel>
		
		<!-- Main Grid -->
		<Grid  DockPanel.Dock="Bottom" Margin="0, 0, 0 ,0" Name="MainGrid" Background="#121212" RowDefinitions="Auto, *, Auto">

			<!-- Title bar-->
			<Grid Grid.Row="0" Height="40" ColumnDefinitions="Auto, *, Auto, Auto, Auto" Margin="0, 10, 0, 0">

				<!-- Plan tasks button -->
				<Button Grid.Column="0"
					Width="160"
					Height="40"
					Margin="20, 0, 20, 0"
					HorizontalContentAlignment="Center"
					VerticalContentAlignment="Center"
					VerticalAlignment="Stretch"
					HorizontalAlignment="Stretch"
					FontWeight="Bold"
					CornerRadius="10"
					Foreground="Black"
					Background="#90caf9"
					FontSize="16">
					Plan Tasks
					<Button.Flyout >

						<!-- Poppup to create new task -->
						<Flyout Placement="BottomEdgeAlignedLeft" FlyoutPresenterClasses="CreateTaskClass">

							<StackPanel>

								<Grid Name="MainFlyerGrid" RowDefinitions="Auto, Auto, Auto, * Auto, Auto, Auto, Auto, Auto,Auto, Auto,Auto, Auto">
									
									<TextBlock Grid.Row="0" Classes ="TextInFlayers">Write Title:</TextBlock>
								
									<TextBox Grid.Row="1" Name="TitleTextBox" Watermark="Task Title" Margin="1" Text="{Binding Title, Mode=TwoWay}"/>

									<TextBlock  Grid.Row="2" Classes ="TextInFlayers">Write Description:</TextBlock>

									<TextBox Height="200" Grid.Row="3" Width="350" TextWrapping="Wrap" AcceptsReturn="True" Name="DescriptionTextBox" Watermark="Task Description" Margin="1" Text="{Binding Description, Mode=TwoWay}"/>

									<ComboBox Grid.Row="4" Name="TaskTypeComboBox" HorizontalAlignment="Stretch" SelectedIndex="{Binding OurTaskType, Mode=TwoWay}">
										<ComboBoxItem>Bool task</ComboBoxItem>
										<ComboBoxItem>int task</ComboBoxItem>
										<ComboBoxItem>complex task</ComboBoxItem>
									</ComboBox>

									<TextBlock Grid.Row="5" Classes ="TextInFlayers">Choose due date</TextBlock>

									<DatePicker  Grid.Row="6" HorizontalAlignment="Stretch" Name="DueDatePicker" DayFormat="ddd dd" SelectedDate="{Binding OurDate, Mode=TwoWay}"/>

									<TextBlock Grid.Row="7" Classes ="TextInFlayers">Write max progress</TextBlock>
									<TextBox  Grid.Row="8" Name="MaxProgressTextBox"  Watermark="Max Progress" Margin="0,0,0,15" Text="{Binding OurTaskProgressRaw, Mode=TwoWay}"/>

									<Grid Grid.Row="9" ColumnDefinitions="*">
										<Button	Grid.Column="0"
											VerticalAlignment="Stretch"
											HorizontalAlignment="Stretch"
											HorizontalContentAlignment="Center"
											VerticalContentAlignment="Center"
											Foreground="White"
											FontSize="18"
											Height="40"
											Background="#282828"
											Content="Create New Task"
											Command="{Binding CreateNewTaskCommand}">
										</Button>
											
									</Grid>
								</Grid>

							</StackPanel>
						</Flyout>
					</Button.Flyout>
				</Button>

				<!-- Search by name text box-->
				<TextBox  BorderBrush="Transparent" Name="SearchhBox" Classes ="SearchBox" Grid.Column="1" Watermark="Search by name" Background="#1f1f1f" Foreground="Gray" Text="{Binding FilterText, Mode=TwoWay}"/>
				<Button Grid.Column="2"
					Width="80"
					Height=""
					Margin="0, 0, 0, 0"
				    CornerRadius="0"
					HorizontalContentAlignment="Center"
					VerticalContentAlignment="Center"
					VerticalAlignment="Stretch"
					HorizontalAlignment="Stretch"
					FontWeight="Bold"
					Foreground="White"
					Background="#434343"
					Command ="{Binding FilterTasksByTitleCommand}"
					FontSize="16">
					Search
				</Button>
				
				<!-- Sort button-->
				<Button Grid.Column="3"
					Width="160"
					Height="40"
					Margin="20, 0, 20, 0"
				    CornerRadius="10"
					HorizontalContentAlignment="Center"
					VerticalContentAlignment="Center"
					VerticalAlignment="Stretch"
					HorizontalAlignment="Stretch"
					FontWeight="Bold"
					Foreground="Black"
					Background="#90caf9"
					FontSize="16">
					Sort
					<Button.Flyout >
					<!-- Poppup to sort task -->
					<Flyout Placement="BottomEdgeAlignedRight" FlyoutPresenterClasses="CreateTaskClass">
						<StackPanel>

							<Grid Name="MainFlyerGridForFilterr" RowDefinitions="*,  Auto">

								<Grid Grid.Row="0" ColumnDefinitions=" *">
									<TextBlock Grid.Column="0" Classes ="TextInFlayers">Sort By:</TextBlock>
								</Grid>
								
								<Grid Grid.Row="1" ColumnDefinitions="*">
									<ComboBox Width="200" Name="DateFilterComboBoxxx" Grid.Column="0" SelectedIndex="{Binding ChosenSort, Mode=TwoWay}" >
										<ComboBoxItem>Sort by titles</ComboBoxItem>
										<ComboBoxItem>Sort by progress</ComboBoxItem>
										<ComboBoxItem>Sort by dates</ComboBoxItem>
									</ComboBox>
								</Grid>



							</Grid>

						</StackPanel>
					</Flyout>
				</Button.Flyout>
				</Button>

				<!-- Filter button-->
				<Button Grid.Column="4"
					Width="160"
					Height="40"
					Margin="0, 0, 20, 0"
					CornerRadius="10"
					HorizontalContentAlignment="Center"
					VerticalContentAlignment="Center"
					VerticalAlignment="Stretch"
					HorizontalAlignment="Stretch"
					FontWeight="Bold"
					Background="#90caf9"
					Foreground="Black"
					FontSize="16">
					Filter
					<Button.Flyout >

					<!-- Poppup to filter task -->
					<Flyout Placement="BottomEdgeAlignedRight" FlyoutPresenterClasses="CreateTaskClass">

						<StackPanel>

							<Grid Name="MainFlyerGridForFilter" RowDefinitions="Auto, Auto, Auto,Auto, Auto,Auto, Auto">

								<Grid Grid.Row="0" ColumnDefinitions="Auto, *">
									<TextBlock  Grid.Column="0" Classes ="TextInFlayers">Period: </TextBlock>
									<ComboBox HorizontalAlignment="Stretch" Name="DateFilterComboBox" Grid.Column="1" SelectedIndex="{Binding ChosenPeriodFilter, Mode=TwoWay}">
										<ComboBoxItem>All</ComboBoxItem>
										<ComboBoxItem>Today</ComboBoxItem>
										<ComboBoxItem>This week</ComboBoxItem>
										<ComboBoxItem>This month</ComboBoxItem>
									</ComboBox>
								</Grid>

								<Grid Grid.Row="1" ColumnDefinitions="Auto, *">
									<TextBlock  Grid.Column="0" Classes ="TextInFlayers">Finished? </TextBlock>

									<ComboBox HorizontalAlignment="Stretch" Name="DateFilterCombocBox" Grid.Column="1" SelectedIndex="{Binding ChosenIsFinishedFilter, Mode=TwoWay}" >
										<ComboBoxItem>Any</ComboBoxItem>
										<ComboBoxItem>Finished</ComboBoxItem>
										<ComboBoxItem>Unfinished</ComboBoxItem>
									</ComboBox>
								</Grid>

								<Grid Grid.Row="2" ColumnDefinitions="*, Auto, Auto, Auto">
									<TextBlock Grid.Column="0" Classes ="TextInFlayers">Included Types:</TextBlock>
									<ToggleSwitch Grid.Column="1" Foreground="White" Name="BoolTaskToggleSwitcch" Content="Bool"  IsChecked="{Binding IsBoolTasksEnabled, Mode=TwoWay}" />
									<ToggleSwitch Grid.Column="2" Foreground="White" Name="IntTaskToggleSwitcch" Content="Int" IsChecked="{Binding IsIntTasksEnabled, Mode=TwoWay}"/>
									<ToggleSwitch Grid.Column="3" Foreground="White" Name="ComplexTaskToggleSwitcch" Content="Complex" IsChecked="{Binding IsComplexTasksEnabled, Mode=TwoWay}"/>
								</Grid>

								<Grid Grid.Row="3" ColumnDefinitions="*">
									<Button	Grid.Column="0"
										VerticalAlignment="Stretch"
										HorizontalAlignment="Stretch"
										HorizontalContentAlignment="Center"
										VerticalContentAlignment="Center"
										Foreground="White"
										Background="#282828"
										Command="{Binding AppyFilterButtonPressedCommand}"
										Content="Apply filter">

									</Button>

								</Grid>

								<Grid Grid.Row="5" ColumnDefinitions="*">
									<Button	Grid.Column="0"
										VerticalAlignment="Stretch"
										HorizontalAlignment="Stretch"
										HorizontalContentAlignment="Center"
										VerticalContentAlignment="Center"
										Margin="0, 10, 0, 0"
										Foreground="White"
										Background="#282828"
										Command="{Binding ResetFilter}"
										Content="Reset filter">


									</Button>

								</Grid>
							</Grid>

						</StackPanel>
					</Flyout>
				</Button.Flyout>
				</Button>
			</Grid>

			<!-- Main Content -->
			<Grid Grid.Row="1" ColumnDefinitions="*" Margin="0, 30, 0, 20">
				<ScrollViewer VerticalScrollBarVisibility="Auto" >

					<StackPanel Grid.Column="0">

						<ItemsControl ItemsSource="{Binding FilteredList}">
							<ItemsControl.ItemTemplate>

								<DataTemplate>
									<!-- Task Section Template -->
									<Border
										Margin="60, 10, 60, 10"
										BorderBrush="Black"
										BoxShadow="2 2 5 0 Black"
										BorderThickness="0">
										<Grid RowDefinitions="Auto, *, Auto" Background="#1f1f1f">

											<!-- Task Title Section-->
											<Grid Grid.Row="0" Height="40" ColumnDefinitions="*, Auto, Auto,Auto">
												<!-- Task Title itself binded here-->
												<StackPanel Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10, 0, 0, 0">
													<TextBlock FontSize="22" Text="{Binding Title}" Margin="2" Foreground="White"/>
												</StackPanel>
												
												<TextBlock VerticalAlignment="Center" Grid.Column="1" FontSize="16" Text="{Binding DueDate, StringFormat=\{0:yyyy-MM-dd\}}"></TextBlock>

												<!-- Change progress button-->

												<Button Grid.Column="2"
													Name="ChangeProgressButton"
													Content="Button with Flyout"
													Height="40"
													Width="80"
													Margin="10, 10, 10, 0"
													Command="{Binding ChangeProgressButtonPressedCommand}"
													HorizontalContentAlignment="Center"
													VerticalContentAlignment="Center"
													VerticalAlignment="Stretch"
													HorizontalAlignment="Stretch"
													Background="#434343"
													Foreground="White"
													FontSize="11">
													Progress

													<Button.Flyout >

														<!-- Poppup for changing task progress -->
														<Flyout Placement="BottomEdgeAlignedRight" FlyoutPresenterClasses="mySpecialClass">
															<StackPanel>

																<!-- Bool task popup-->
																<StackPanel Name="Bool Popup" IsVisible="{Binding IsBoolTask}">
																	<CheckBox 
																		Foreground="White" 
																		Classes ="TextInFlayers"
																		IsChecked="{Binding IsDone, Mode=OneTime}" 
																		Content="is task done?" 
																		Margin="1"
																		x:CompileBindings="False"
																		Command="{Binding $parent[UserControl].DataContext.ChangeBoolTaskProgressCommand}"
																		CommandParameter="{Binding}"/>
																</StackPanel>

																<!-- Int task popup-->
																<StackPanel Name="Int Popup" IsVisible="{Binding IsIntTask}">
																	<TextBlock Classes ="TextInFlayers" Text="Write current progress" Margin="1" />
																	<TextBox Name="CurrentProgressTextBox" Watermark="Progress" Margin="1" Text="{Binding CurrentIntProgress, Mode=OneTime}"/>
																	<Button Classes ="TextInFlayers"
																			Foreground="White"
																			Content="Apply" 
																			x:CompileBindings="False"
																			HorizontalAlignment="Stretch"
																			Command="{Binding ChangedProgressForIntTaskCommand }"
																			CommandParameter="{Binding Text, ElementName=CurrentProgressTextBox}"/>
																</StackPanel>

																<!-- Complex task popup-->
																<StackPanel Name="Complex Popup" IsVisible="{Binding IsComplexTask}">
																	<TextBlock Classes ="TextInFlayers" Text="To progress in complex tasks you need to complete subtasks" Margin="1" />
																</StackPanel>

															</StackPanel>
														</Flyout>
													</Button.Flyout>
												</Button>

												<!-- Edit task button-->
												<Button Grid.Column="3"
													Height="40"
													Width="80"
													HorizontalContentAlignment="Center"
													VerticalContentAlignment="Center"
													VerticalAlignment="Stretch"
													HorizontalAlignment="Stretch"
													x:CompileBindings="False"
													Command="{Binding $parent[UserControl].DataContext.ChangePossibleParentTasksCommand}"
													CommandParameter="{Binding}"
													Margin="10, 10, 10, 0"
													Background="#434343"
													Foreground="White"
													FontSize="11">
													Edit

													<Button.Flyout >

														<!-- Poppup for changing task -->
														<Flyout Placement="BottomEdgeAlignedRight" FlyoutPresenterClasses="CreateTaskClass">

															<StackPanel>

																<Grid Name="MainFlyerGrid" RowDefinitions="Auto, Auto, * Auto,Auto, Auto, Auto, Auto, Auto, Auto,Auto, Auto">

																	<Grid Grid.Row="0" ColumnDefinitions="Auto, *">
																		<TextBlock Classes ="TextInFlayers">Title:</TextBlock>
																		<TextBox Grid.Column="1" Watermark="Task Title" Margin="1" Text="{Binding Title, Mode=TwoWay}"/>
																	</Grid>

																	<Grid Grid.Row="1" ColumnDefinitions="*">
																		<TextBlock Classes ="TextInFlayers">Description:</TextBlock>
																		
																	</Grid>

																	<Grid Grid.Row="2" Height="200" ColumnDefinitions="*">

																		<TextBox Grid.Column="0" Width="350" Height="200" TextWrapping="Wrap" AcceptsReturn="True" Watermark="Task Description" Margin="1" Text="{Binding TaskDescription, Mode=TwoWay}"/>


																	</Grid>

																	<Grid Grid.Row="3" ColumnDefinitions=" *">
																		<TextBlock Grid.Column="0" Classes ="TextInFlayers">Due date:</TextBlock>
																	</Grid>

																	<Grid Grid.Row="4" ColumnDefinitions=" *">
																		<DatePicker Grid.Column="1" 
																					DayFormat="ddd dd" 
																					SelectedDate="{Binding DueDateOffset, Mode=TwoWay}"/>
																	</Grid>

																	<Grid Grid.Row="5" IsVisible="{Binding isIntTask}" ColumnDefinitions="Auto, *">
																		<TextBlock Grid.Column="0" Classes ="TextInFlayers">Max progress:</TextBlock>
																		<TextBox Grid.Column="1" Watermark="Max Progress" Margin="1"  Text="{Binding MaxIntProgress, Mode=TwoWay}"/>
																	</Grid>

																	<TextBlock Grid.Row="6" Classes ="TextInFlayers">Current parent task:</TextBlock>


																	<StackPanel Grid.Row="7">
																		<ComboBox 
																			SelectedIndex="{Binding ParentViewModel.CurrentParentTaskIndex, Mode=TwoWay}"
																			Margin="0, 0, 0, 10"
																			ItemsSource="{Binding ParentViewModel.PossibleTaskItems}"
																			HorizontalAlignment="Stretch"
																			MaxDropDownHeight="300">
																				<ComboBox.ItemTemplate >
																					<DataTemplate >
																						<TextBlock 	x:CompileBindings="False" Text="{Binding Title}" />
																					
																					</DataTemplate>
																				</ComboBox.ItemTemplate>
																			</ComboBox>
																	</StackPanel>

																	<Grid Grid.Row="8" ColumnDefinitions="*">
																		<Button	Grid.Column="0"
																			VerticalAlignment="Stretch"
																			HorizontalAlignment="Stretch"
																			HorizontalContentAlignment="Center"
																			VerticalContentAlignment="Center"
																			Foreground="White"
																			Background="#282828"
																			x:CompileBindings="False"
																			Command="{Binding $parent[UserControl].DataContext.EditTaskButtonCommand}"
																			CommandParameter="{Binding}"
																			Content="Apply">
																			
																		</Button>
																	</Grid>

																	<Grid Grid.Row="9" ColumnDefinitions="*">
																		<Button	Grid.Column="0"
																			VerticalAlignment="Stretch"
																			Margin="0, 10, 0, 5"
																			HorizontalAlignment="Stretch"
																			HorizontalContentAlignment="Center"
																			VerticalContentAlignment="Center"
																			Foreground="White"
																			Background="Red"
																			x:CompileBindings="False"
																			Command="{Binding $parent[UserControl].DataContext.DeleteTaskButtonCommand}"
																			CommandParameter="{Binding}"
																			Content="Delete task">
																		
																		</Button>
																	</Grid>
																</Grid>

															</StackPanel>
														</Flyout>
													</Button.Flyout>
												</Button>

											</Grid>

											<!-- Task Description section-->
											<Grid Grid.Row="1" ColumnDefinitions="*">
												<StackPanel Grid.Column="0">
													<TextBlock Foreground="White" Text="{Binding TaskDescription}" Margin="10, 0, 0, 10" />
												</StackPanel>
											</Grid>

											<!-- Task Progress bar section-->
											<Grid Grid.Row="2" ColumnDefinitions="*">
												<StackPanel Grid.Column="0" VerticalAlignment="Center">
													<ProgressBar
														Minimum="0"
														Maximum="{Binding MaxIntProgress}"
														Value="{Binding CurrentIntProgress}"
														FontWeight="Bold"
														ProgressTextFormat="{}{0}/{3} Percentage is: {1:0}%"
														Height="30"
														Background="#1f1f1f"
														HorizontalAlignment="Stretch"
														VerticalAlignment="Center"
														Foreground="#90caf9"
														ShowProgressText="True"/>
												</StackPanel>
											</Grid>
										</Grid>

									</Border>

								</DataTemplate>

							</ItemsControl.ItemTemplate>
						</ItemsControl>


					</StackPanel>
				</ScrollViewer>
			</Grid>

			<!-- Bottom Bar -->

		</Grid>

	</DockPanel>
</UserControl>
